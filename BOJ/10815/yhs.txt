/*
N개의 수가 주어졌을 때, 이를 오름차순으로 정렬하는 프로그램을 작성하시오.

입력
첫째 줄에 수의 개수 N(1 ≤ N ≤ 1,000)이 주어진다. 둘째 줄부터 N개의 줄에는 수 주어진다. 이 수는 절댓값이 1,000보다 작거나 같은 정수이다. 수는 중복되지 않는다.

출력
첫째 줄부터 N개의 줄에 오름차순으로 정렬한 결과를 한 줄에 하나씩 출력한다.

예제 입력 1
5
5
2
3
4
1
예제 출력 1
1
2
3
4
5
*/

use std::io;
use std::collections::{HashSet, VecDeque};

fn str_readline() -> String{
    let mut insert_line = String::new();
    io::stdin().read_line(&mut insert_line).expect("read fail");
    insert_line
}

fn str_line_to_int() -> i32{
    let line = str_readline();
    let num = line.trim().parse().expect("parse fail");
    num
}

fn str_line_to_VecDeque() -> VecDeque<i32>{
    let line = str_readline();
    line.split_whitespace().map(|x| x.parse().expect("parse fail")).into_iter().collect::<VecDeque<_>>()
}

fn str_line_to_HashSet() -> HashSet<i32>{
    let line = str_readline();
    line.split_whitespace().map(|x| x.parse().expect("parse fail")).into_iter().collect::<HashSet<_>>()
}

fn main() {
    let n = str_line_to_int();
    let n_number = str_line_to_HashSet();
    let m = str_line_to_int();
    let m_number = str_line_to_VecDeque();

    for m_value in m_number{
        if n_number.contains(&m_value){
            print!("1 ");
        }else{
            print!("0 ");
        }

    }


}
